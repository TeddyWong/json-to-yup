import * as yup from "yup";
import { JsonSchema } from "./schema";
export declare const jsonToYup: (js: JsonSchema) => yup.ObjectSchema<import("yup/lib/object").Assign<import("yup/lib/object").ObjectShape, Record<string, yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ObjectSchema<{
    [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
}, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<{
    [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
}>, import("yup/lib/object").AssertsShape<{
    [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
}>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any>>>, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<import("yup/lib/object").Assign<import("yup/lib/object").ObjectShape, Record<string, yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ObjectSchema<{
    [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
}, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<{
    [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
}>, import("yup/lib/object").AssertsShape<{
    [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
}>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any>>>>, import("yup/lib/object").AssertsShape<import("yup/lib/object").Assign<import("yup/lib/object").ObjectShape, Record<string, yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ObjectSchema<{
    [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
}, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<{
    [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
}>, import("yup/lib/object").AssertsShape<{
    [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
}>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any>>>>>;
declare const _default: {
    jsonToYup: (js: JsonSchema) => yup.ObjectSchema<import("yup/lib/object").Assign<import("yup/lib/object").ObjectShape, Record<string, yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ObjectSchema<{
        [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
    }, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<{
        [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
    }>, import("yup/lib/object").AssertsShape<{
        [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
    }>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any>>>, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<import("yup/lib/object").Assign<import("yup/lib/object").ObjectShape, Record<string, yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ObjectSchema<{
        [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
    }, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<{
        [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
    }>, import("yup/lib/object").AssertsShape<{
        [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
    }>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any>>>>, import("yup/lib/object").AssertsShape<import("yup/lib/object").Assign<import("yup/lib/object").ObjectShape, Record<string, yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ObjectSchema<{
        [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
    }, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<{
        [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
    }>, import("yup/lib/object").AssertsShape<{
        [x: string]: yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any> | yup.ArraySchema<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown> | import("yup/lib/Lazy").default<yup.BaseSchema<unknown, import("yup/lib/object").AnyObject, unknown>, import("yup/lib/object").AnyObject>, import("yup/lib/types").AnyObject, unknown[] | undefined, unknown[] | undefined> | import("yup/lib/Lazy").default<yup.ObjectSchema<any, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<any>, import("yup/lib/object").AssertsShape<any>>, any>;
    }>> | yup.BaseSchema<any, import("yup/lib/object").AnyObject, any>>>>>;
};
export default _default;
